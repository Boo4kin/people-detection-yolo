# Детекция людей в видео

Этот проект выполняет детекцию людей в видеофайле с использованием модели YOLOv8m. Программа обрабатывает видео, обнаруживает людей, рисует вокруг них прямоугольники с метками "Person" и значениями уверенности (например, "Person: 0.85"), отображает результат как воспроизводимое видео в Jupyter Notebook и сохраняет выходное видео.

## Требования

- Python 3.8+
- Jupyter Notebook
- Библиотеки, указанные в `requirements.txt`
- Входное видео в папке `input` (например, `input/crowd.mp4`)

## Установка

1. **Клонирование репозитория**:
   ```bash
   git clone <repository_url>
   cd people_detection
   ```

2. **Создание виртуального окружения** (рекомендуется):
   ```bash
   python -m venv venv
   source venv/bin/activate  # Linux/Mac
   venv\\Scripts\\activate    # Windows
   ```

3. **Установка зависимостей**:
   ```bash
   pip install -r requirements.txt
   ```

4. **Подготовка видео**:
   Поместите входное видео в папку `input` (например, `input/crowd.mp4`). Убедитесь, что путь в `detect_people.ipynb` соответствует расположению файла.

5. **Запуск Jupyter Notebook**:
   ```bash
   jupyter notebook
   ```
   Откройте `CV.ipynb` в браузере.

## Использование

1. Запустите все ячейки в `CV.ipynb`:
   - Программа загрузит модель YOLOv8m.
   - Обработает видео, выполняя детекцию людей.
   - Нарисует прямоугольники с метками "Person" и значениями уверенности.
   - Отобразит результат как воспроизводимое видео в ноутбуке.
   - Сохранит выходное видео в `output_crowd_yolo.mp4`.

## Структура проекта

- `CV.rar/CV.ipynb`: Основной ноутбук для обработки видео и детекции людей.
- `requirements.txt`: Список зависимостей.
- `README.md`: Документация проекта.
- [`crowd.mp4`](https://github.com/Boo4kin/people-detection-yolo/blob/main/crowd.mp4): Входное видео
- [`output_crowd_yolo.mp4`](https://github.com/Boo4kin/people-detection-yolo/blob/main/output_crowd_yolo.mp4): Обработанное видео
- `.gitignore`: Файл, указывающий, какие файлы игнорировать в Git.
- `input/` (не в Git): Папка для входного видео.
- `output/` (не в Git): Папка для выходного видео.

## Примечания

- Скрипт использует модель YOLOv8m для повышения точности. Для ускорения можно заменить на `yolov8n.pt` в `CV.ipynb`.
- Настройте порог уверенности (`conf=0.5`) в функции `process_frame` для более/менее строгой детекции.
- Для больших видео рекомендуется ограничить количество кадров для тестирования, добавив счётчик кадров в `main`.
- Если видео не воспроизводится, проверьте кодек (`mp4v`). Альтернативно используйте `XVID`:
  ```python
  fourcc = cv2.VideoWriter_fourcc(*"XVID")
  ```
